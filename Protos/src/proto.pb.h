#include "stdafx.h"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_src_2fproto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_src_2fproto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_src_2fproto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_src_2fproto_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_src_2fproto_2eproto;
class ErrorEnRespuesta;
class ErrorEnRespuestaDefaultTypeInternal;
extern ErrorEnRespuestaDefaultTypeInternal _ErrorEnRespuesta_default_instance_;
class Respuesta;
class RespuestaDefaultTypeInternal;
extern RespuestaDefaultTypeInternal _Respuesta_default_instance_;
class RespuestaCorrecta;
class RespuestaCorrectaDefaultTypeInternal;
extern RespuestaCorrectaDefaultTypeInternal _RespuestaCorrecta_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ErrorEnRespuesta* Arena::CreateMaybeMessage<::ErrorEnRespuesta>(Arena*);
template<> ::Respuesta* Arena::CreateMaybeMessage<::Respuesta>(Arena*);
template<> ::RespuestaCorrecta* Arena::CreateMaybeMessage<::RespuestaCorrecta>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ErrorEnRespuesta :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ErrorEnRespuesta) */ {
 public:
  ErrorEnRespuesta();
  virtual ~ErrorEnRespuesta();

  ErrorEnRespuesta(const ErrorEnRespuesta& from);
  ErrorEnRespuesta(ErrorEnRespuesta&& from) noexcept
    : ErrorEnRespuesta() {
    *this = ::std::move(from);
  }

  inline ErrorEnRespuesta& operator=(const ErrorEnRespuesta& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorEnRespuesta& operator=(ErrorEnRespuesta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ErrorEnRespuesta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorEnRespuesta* internal_default_instance() {
    return reinterpret_cast<const ErrorEnRespuesta*>(
               &_ErrorEnRespuesta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ErrorEnRespuesta& a, ErrorEnRespuesta& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorEnRespuesta* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ErrorEnRespuesta* New() const final {
    return CreateMaybeMessage<ErrorEnRespuesta>(nullptr);
  }

  ErrorEnRespuesta* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ErrorEnRespuesta>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ErrorEnRespuesta& from);
  void MergeFrom(const ErrorEnRespuesta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorEnRespuesta* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ErrorEnRespuesta";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fproto_2eproto);
    return ::descriptor_table_src_2fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestIdFieldNumber = 1,
    kMensajeFieldNumber = 2,
  };
  // required string requestId = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  const std::string& requestid() const;
  void set_requestid(const std::string& value);
  void set_requestid(std::string&& value);
  void set_requestid(const char* value);
  void set_requestid(const char* value, size_t size);
  std::string* mutable_requestid();
  std::string* release_requestid();
  void set_allocated_requestid(std::string* requestid);
  private:
  const std::string& _internal_requestid() const;
  void _internal_set_requestid(const std::string& value);
  std::string* _internal_mutable_requestid();
  public:

  // required string mensaje = 2;
  bool has_mensaje() const;
  private:
  bool _internal_has_mensaje() const;
  public:
  void clear_mensaje();
  const std::string& mensaje() const;
  void set_mensaje(const std::string& value);
  void set_mensaje(std::string&& value);
  void set_mensaje(const char* value);
  void set_mensaje(const char* value, size_t size);
  std::string* mutable_mensaje();
  std::string* release_mensaje();
  void set_allocated_mensaje(std::string* mensaje);
  private:
  const std::string& _internal_mensaje() const;
  void _internal_set_mensaje(const std::string& value);
  std::string* _internal_mutable_mensaje();
  public:

  // @@protoc_insertion_point(class_scope:ErrorEnRespuesta)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr requestid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mensaje_;
  friend struct ::TableStruct_src_2fproto_2eproto;
};
// -------------------------------------------------------------------

class RespuestaCorrecta :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RespuestaCorrecta) */ {
 public:
  RespuestaCorrecta();
  virtual ~RespuestaCorrecta();

  RespuestaCorrecta(const RespuestaCorrecta& from);
  RespuestaCorrecta(RespuestaCorrecta&& from) noexcept
    : RespuestaCorrecta() {
    *this = ::std::move(from);
  }

  inline RespuestaCorrecta& operator=(const RespuestaCorrecta& from) {
    CopyFrom(from);
    return *this;
  }
  inline RespuestaCorrecta& operator=(RespuestaCorrecta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RespuestaCorrecta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RespuestaCorrecta* internal_default_instance() {
    return reinterpret_cast<const RespuestaCorrecta*>(
               &_RespuestaCorrecta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RespuestaCorrecta& a, RespuestaCorrecta& b) {
    a.Swap(&b);
  }
  inline void Swap(RespuestaCorrecta* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RespuestaCorrecta* New() const final {
    return CreateMaybeMessage<RespuestaCorrecta>(nullptr);
  }

  RespuestaCorrecta* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RespuestaCorrecta>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RespuestaCorrecta& from);
  void MergeFrom(const RespuestaCorrecta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RespuestaCorrecta* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RespuestaCorrecta";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fproto_2eproto);
    return ::descriptor_table_src_2fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestIdFieldNumber = 1,
    kMensajeFieldNumber = 2,
  };
  // required string requestId = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  const std::string& requestid() const;
  void set_requestid(const std::string& value);
  void set_requestid(std::string&& value);
  void set_requestid(const char* value);
  void set_requestid(const char* value, size_t size);
  std::string* mutable_requestid();
  std::string* release_requestid();
  void set_allocated_requestid(std::string* requestid);
  private:
  const std::string& _internal_requestid() const;
  void _internal_set_requestid(const std::string& value);
  std::string* _internal_mutable_requestid();
  public:

  // required string mensaje = 2;
  bool has_mensaje() const;
  private:
  bool _internal_has_mensaje() const;
  public:
  void clear_mensaje();
  const std::string& mensaje() const;
  void set_mensaje(const std::string& value);
  void set_mensaje(std::string&& value);
  void set_mensaje(const char* value);
  void set_mensaje(const char* value, size_t size);
  std::string* mutable_mensaje();
  std::string* release_mensaje();
  void set_allocated_mensaje(std::string* mensaje);
  private:
  const std::string& _internal_mensaje() const;
  void _internal_set_mensaje(const std::string& value);
  std::string* _internal_mutable_mensaje();
  public:

  // @@protoc_insertion_point(class_scope:RespuestaCorrecta)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr requestid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mensaje_;
  friend struct ::TableStruct_src_2fproto_2eproto;
};
// -------------------------------------------------------------------

class Respuesta :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Respuesta) */ {
 public:
  Respuesta();
  virtual ~Respuesta();

  Respuesta(const Respuesta& from);
  Respuesta(Respuesta&& from) noexcept
    : Respuesta() {
    *this = ::std::move(from);
  }

  inline Respuesta& operator=(const Respuesta& from) {
    CopyFrom(from);
    return *this;
  }
  inline Respuesta& operator=(Respuesta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Respuesta& default_instance();

  enum ResultCase {
    kResponse = 1,
    kError = 2,
    RESULT_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Respuesta* internal_default_instance() {
    return reinterpret_cast<const Respuesta*>(
               &_Respuesta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Respuesta& a, Respuesta& b) {
    a.Swap(&b);
  }
  inline void Swap(Respuesta* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Respuesta* New() const final {
    return CreateMaybeMessage<Respuesta>(nullptr);
  }

  Respuesta* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Respuesta>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Respuesta& from);
  void MergeFrom(const Respuesta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Respuesta* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Respuesta";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_src_2fproto_2eproto);
    return ::descriptor_table_src_2fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // optional .RespuestaCorrecta response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const ::RespuestaCorrecta& response() const;
  ::RespuestaCorrecta* release_response();
  ::RespuestaCorrecta* mutable_response();
  void set_allocated_response(::RespuestaCorrecta* response);
  private:
  const ::RespuestaCorrecta& _internal_response() const;
  ::RespuestaCorrecta* _internal_mutable_response();
  public:

  // optional .ErrorEnRespuesta error = 2;
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const ::ErrorEnRespuesta& error() const;
  ::ErrorEnRespuesta* release_error();
  ::ErrorEnRespuesta* mutable_error();
  void set_allocated_error(::ErrorEnRespuesta* error);
  private:
  const ::ErrorEnRespuesta& _internal_error() const;
  ::ErrorEnRespuesta* _internal_mutable_error();
  public:

  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:Respuesta)
 private:
  class _Internal;
  void set_has_response();
  void set_has_error();

  inline bool has_result() const;
  inline void clear_has_result();

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  union ResultUnion {
    ResultUnion() {}
    ::RespuestaCorrecta* response_;
    ::ErrorEnRespuesta* error_;
  } result_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_src_2fproto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ErrorEnRespuesta

// required string requestId = 1;
inline bool ErrorEnRespuesta::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ErrorEnRespuesta::has_requestid() const {
  return _internal_has_requestid();
}
inline void ErrorEnRespuesta::clear_requestid() {
  requestid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ErrorEnRespuesta::requestid() const {
  // @@protoc_insertion_point(field_get:ErrorEnRespuesta.requestId)
  return _internal_requestid();
}
inline void ErrorEnRespuesta::set_requestid(const std::string& value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:ErrorEnRespuesta.requestId)
}
inline std::string* ErrorEnRespuesta::mutable_requestid() {
  // @@protoc_insertion_point(field_mutable:ErrorEnRespuesta.requestId)
  return _internal_mutable_requestid();
}
inline const std::string& ErrorEnRespuesta::_internal_requestid() const {
  return requestid_.GetNoArena();
}
inline void ErrorEnRespuesta::_internal_set_requestid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ErrorEnRespuesta::set_requestid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ErrorEnRespuesta.requestId)
}
inline void ErrorEnRespuesta::set_requestid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorEnRespuesta.requestId)
}
inline void ErrorEnRespuesta::set_requestid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorEnRespuesta.requestId)
}
inline std::string* ErrorEnRespuesta::_internal_mutable_requestid() {
  _has_bits_[0] |= 0x00000001u;
  return requestid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ErrorEnRespuesta::release_requestid() {
  // @@protoc_insertion_point(field_release:ErrorEnRespuesta.requestId)
  if (!has_requestid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return requestid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorEnRespuesta::set_allocated_requestid(std::string* requestid) {
  if (requestid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  requestid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), requestid);
  // @@protoc_insertion_point(field_set_allocated:ErrorEnRespuesta.requestId)
}

// required string mensaje = 2;
inline bool ErrorEnRespuesta::_internal_has_mensaje() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ErrorEnRespuesta::has_mensaje() const {
  return _internal_has_mensaje();
}
inline void ErrorEnRespuesta::clear_mensaje() {
  mensaje_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ErrorEnRespuesta::mensaje() const {
  // @@protoc_insertion_point(field_get:ErrorEnRespuesta.mensaje)
  return _internal_mensaje();
}
inline void ErrorEnRespuesta::set_mensaje(const std::string& value) {
  _internal_set_mensaje(value);
  // @@protoc_insertion_point(field_set:ErrorEnRespuesta.mensaje)
}
inline std::string* ErrorEnRespuesta::mutable_mensaje() {
  // @@protoc_insertion_point(field_mutable:ErrorEnRespuesta.mensaje)
  return _internal_mutable_mensaje();
}
inline const std::string& ErrorEnRespuesta::_internal_mensaje() const {
  return mensaje_.GetNoArena();
}
inline void ErrorEnRespuesta::_internal_set_mensaje(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ErrorEnRespuesta::set_mensaje(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ErrorEnRespuesta.mensaje)
}
inline void ErrorEnRespuesta::set_mensaje(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorEnRespuesta.mensaje)
}
inline void ErrorEnRespuesta::set_mensaje(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorEnRespuesta.mensaje)
}
inline std::string* ErrorEnRespuesta::_internal_mutable_mensaje() {
  _has_bits_[0] |= 0x00000002u;
  return mensaje_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ErrorEnRespuesta::release_mensaje() {
  // @@protoc_insertion_point(field_release:ErrorEnRespuesta.mensaje)
  if (!has_mensaje()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return mensaje_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorEnRespuesta::set_allocated_mensaje(std::string* mensaje) {
  if (mensaje != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mensaje_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mensaje);
  // @@protoc_insertion_point(field_set_allocated:ErrorEnRespuesta.mensaje)
}

// -------------------------------------------------------------------

// RespuestaCorrecta

// required string requestId = 1;
inline bool RespuestaCorrecta::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RespuestaCorrecta::has_requestid() const {
  return _internal_has_requestid();
}
inline void RespuestaCorrecta::clear_requestid() {
  requestid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& RespuestaCorrecta::requestid() const {
  // @@protoc_insertion_point(field_get:RespuestaCorrecta.requestId)
  return _internal_requestid();
}
inline void RespuestaCorrecta::set_requestid(const std::string& value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:RespuestaCorrecta.requestId)
}
inline std::string* RespuestaCorrecta::mutable_requestid() {
  // @@protoc_insertion_point(field_mutable:RespuestaCorrecta.requestId)
  return _internal_mutable_requestid();
}
inline const std::string& RespuestaCorrecta::_internal_requestid() const {
  return requestid_.GetNoArena();
}
inline void RespuestaCorrecta::_internal_set_requestid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RespuestaCorrecta::set_requestid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RespuestaCorrecta.requestId)
}
inline void RespuestaCorrecta::set_requestid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RespuestaCorrecta.requestId)
}
inline void RespuestaCorrecta::set_requestid(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  requestid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RespuestaCorrecta.requestId)
}
inline std::string* RespuestaCorrecta::_internal_mutable_requestid() {
  _has_bits_[0] |= 0x00000001u;
  return requestid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RespuestaCorrecta::release_requestid() {
  // @@protoc_insertion_point(field_release:RespuestaCorrecta.requestId)
  if (!has_requestid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return requestid_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RespuestaCorrecta::set_allocated_requestid(std::string* requestid) {
  if (requestid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  requestid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), requestid);
  // @@protoc_insertion_point(field_set_allocated:RespuestaCorrecta.requestId)
}

// required string mensaje = 2;
inline bool RespuestaCorrecta::_internal_has_mensaje() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RespuestaCorrecta::has_mensaje() const {
  return _internal_has_mensaje();
}
inline void RespuestaCorrecta::clear_mensaje() {
  mensaje_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& RespuestaCorrecta::mensaje() const {
  // @@protoc_insertion_point(field_get:RespuestaCorrecta.mensaje)
  return _internal_mensaje();
}
inline void RespuestaCorrecta::set_mensaje(const std::string& value) {
  _internal_set_mensaje(value);
  // @@protoc_insertion_point(field_set:RespuestaCorrecta.mensaje)
}
inline std::string* RespuestaCorrecta::mutable_mensaje() {
  // @@protoc_insertion_point(field_mutable:RespuestaCorrecta.mensaje)
  return _internal_mutable_mensaje();
}
inline const std::string& RespuestaCorrecta::_internal_mensaje() const {
  return mensaje_.GetNoArena();
}
inline void RespuestaCorrecta::_internal_set_mensaje(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void RespuestaCorrecta::set_mensaje(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RespuestaCorrecta.mensaje)
}
inline void RespuestaCorrecta::set_mensaje(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RespuestaCorrecta.mensaje)
}
inline void RespuestaCorrecta::set_mensaje(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  mensaje_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RespuestaCorrecta.mensaje)
}
inline std::string* RespuestaCorrecta::_internal_mutable_mensaje() {
  _has_bits_[0] |= 0x00000002u;
  return mensaje_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RespuestaCorrecta::release_mensaje() {
  // @@protoc_insertion_point(field_release:RespuestaCorrecta.mensaje)
  if (!has_mensaje()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return mensaje_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RespuestaCorrecta::set_allocated_mensaje(std::string* mensaje) {
  if (mensaje != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  mensaje_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mensaje);
  // @@protoc_insertion_point(field_set_allocated:RespuestaCorrecta.mensaje)
}

// -------------------------------------------------------------------

// Respuesta

// optional .RespuestaCorrecta response = 1;
inline bool Respuesta::_internal_has_response() const {
  return result_case() == kResponse;
}
inline bool Respuesta::has_response() const {
  return _internal_has_response();
}
inline void Respuesta::set_has_response() {
  _oneof_case_[0] = kResponse;
}
inline void Respuesta::clear_response() {
  if (_internal_has_response()) {
    delete result_.response_;
    clear_has_result();
  }
}
inline ::RespuestaCorrecta* Respuesta::release_response() {
  // @@protoc_insertion_point(field_release:Respuesta.response)
  if (has_response()) {
    clear_has_result();
      ::RespuestaCorrecta* temp = result_.response_;
    result_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::RespuestaCorrecta& Respuesta::_internal_response() const {
  return _internal_has_response()
      ? *result_.response_
      : *reinterpret_cast< ::RespuestaCorrecta*>(&::_RespuestaCorrecta_default_instance_);
}
inline const ::RespuestaCorrecta& Respuesta::response() const {
  // @@protoc_insertion_point(field_get:Respuesta.response)
  return _internal_response();
}
inline ::RespuestaCorrecta* Respuesta::_internal_mutable_response() {
  if (!_internal_has_response()) {
    clear_result();
    set_has_response();
    result_.response_ = CreateMaybeMessage< ::RespuestaCorrecta >(
        GetArenaNoVirtual());
  }
  return result_.response_;
}
inline ::RespuestaCorrecta* Respuesta::mutable_response() {
  // @@protoc_insertion_point(field_mutable:Respuesta.response)
  return _internal_mutable_response();
}

// optional .ErrorEnRespuesta error = 2;
inline bool Respuesta::_internal_has_error() const {
  return result_case() == kError;
}
inline bool Respuesta::has_error() const {
  return _internal_has_error();
}
inline void Respuesta::set_has_error() {
  _oneof_case_[0] = kError;
}
inline void Respuesta::clear_error() {
  if (_internal_has_error()) {
    delete result_.error_;
    clear_has_result();
  }
}
inline ::ErrorEnRespuesta* Respuesta::release_error() {
  // @@protoc_insertion_point(field_release:Respuesta.error)
  if (has_error()) {
    clear_has_result();
      ::ErrorEnRespuesta* temp = result_.error_;
    result_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ErrorEnRespuesta& Respuesta::_internal_error() const {
  return _internal_has_error()
      ? *result_.error_
      : *reinterpret_cast< ::ErrorEnRespuesta*>(&::_ErrorEnRespuesta_default_instance_);
}
inline const ::ErrorEnRespuesta& Respuesta::error() const {
  // @@protoc_insertion_point(field_get:Respuesta.error)
  return _internal_error();
}
inline ::ErrorEnRespuesta* Respuesta::_internal_mutable_error() {
  if (!_internal_has_error()) {
    clear_result();
    set_has_error();
    result_.error_ = CreateMaybeMessage< ::ErrorEnRespuesta >(
        GetArenaNoVirtual());
  }
  return result_.error_;
}
inline ::ErrorEnRespuesta* Respuesta::mutable_error() {
  // @@protoc_insertion_point(field_mutable:Respuesta.error)
  return _internal_mutable_error();
}

inline bool Respuesta::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void Respuesta::clear_has_result() {
  _oneof_case_[0] = RESULT_NOT_SET;
}
inline Respuesta::ResultCase Respuesta::result_case() const {
  return Respuesta::ResultCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_src_2fproto_2eproto
